import Decimal from "break_eternity.js";

export interface Player {
  gameVersion: string;
  lastTick: number;
  points: Decimal;
  upgradeLvl: Decimal;
  startedRun: number;
  bestRun: number | null;
  everMadeRun: boolean;
  autoresettingEnabled: boolean;
  approximateResetsPerSecond: Decimal;
  bestPointsOfRun: Decimal;
  boughtFirstResetUpgrade: boolean;
  boughtSecondResetUpgrade: boolean;
  everMadeTier: boolean;
  tier: Decimal;
  madeTierTimes: Decimal;
  autoTierEnabled: boolean;
  approximateTiersPerSecond: Decimal;
  boughtFirstTierUpgrade: boolean;
  boughtSecondTierUpgrade: boolean;
  boughtThirdTierUpgrade: boolean;
  boughtFourthTierUpgrade: boolean;
  tierStartedDate: number | null;
  ampliflux: Decimal;
  amplifluxUpgradeLvl: Decimal;
  boughtFifthTierUpgrade: boolean;
  boughtSixthTierUpgrade: boolean;
  everMadeVermyros: boolean;
  vermyrosStartedDate: number | null;
  autoVermyrosEnabled: boolean;
  approximateVermyrosResetsPerSecond: Decimal;
  vermytes: Decimal;
  bestVermytes: Decimal;
  vermytesUpgradeLvl: Decimal;
  vermora: Decimal;
  boughtFirstVermyrosUpgrade: boolean;
  boughtSecondVermyrosUpgrade: boolean;
  boughtThirdVermyrosUpgrade: boolean;
  boughtFourthVermyrosUpgrade: boolean;
  boughtFifthVermyrosUpgrade: boolean;
  boughtSixthVermyrosUpgrade: boolean;
  boughtSeventhVermyrosUpgrade: boolean;
  boughtEighthVermyrosUpgrade: boolean;
  enteredAmplivault: boolean;
  amplivaultLevel: Decimal;
  bestSoftcapperLevel: Decimal;
  stableProgressBars: boolean;
  energyReactors: Decimal;
  energy: Decimal;
  everReachedCores: boolean;
  everMadeCoreReset: boolean;
  cores: Decimal;
  coreUpgradeLvl: Decimal;
  boughtNinthVermyrosUpgrade: boolean;
  boughtTenthVermyrosUpgrade: boolean;
  everBoughtTenthVermyrosUpgrade: boolean;
  exponentialNotation: boolean;
  darkEnergy: Decimal;
  everMadeNullith: boolean;
  nullithStartedDate: number | null;
  autoNullithEnabled: boolean;
  approximateNullithResetsPerSecond: Decimal;
  madeNullithResets: Decimal;
  boughtFirstNullithUpgrade: boolean;
  boughtSecondNullithUpgrade: boolean;
  boughtThirdNullithUpgrade: boolean;
  boughtFourthNullithUpgrade: boolean;
  hideBoughtUpgrades: boolean;
  reachedBreakAmplivault: boolean;
  amplivaultBroken: boolean;
  nullionInput: string;
  nullions: Decimal;
  boughtFifthNullithUpgrade: boolean;
  boughtSixthNullithUpgrade: boolean;
  enteredSliph: boolean;
  everEnteredSliph: boolean;
  dertoints: Decimal;
  dertointUpgradeLvl: Decimal;
  boughtFirstDertointUpgrade: boolean;
  boughtSecondDertointUpgrade: boolean;
  boughtThirdDertointUpgrade: boolean;
  boughtFourthDertointUpgrade: boolean;
  boughtFirstMallirtUpgrade: boolean;
  boughtSecondMallirtUpgrade: boolean;
  boughtThirdMallirtUpgrade: boolean;
  boughtFourthMallirtUpgrade: boolean;
  mallirtStartedDate: number | null;
  everMadeMallirt: boolean;
  autoMallirtEnabled: boolean;
  approximateMallirtResetsPerSecond: Decimal;
  mallirtTotalDertoints: Decimal;
}

export interface CachedPlayer {
  pointGain: Decimal;
  timeSinceHighestReset: number;
  upgradeCost: Decimal;
  upgradeEffect: Decimal;
  upgradeBulk: Decimal;
  lastResetTime: number | null;
  runEffect: Decimal;
  bestPointsOfRunEffect: Decimal;
  lastTierTime: number | null;
  tierRequirement: Decimal;
  tierResetGain: Decimal;
  tierEffect: Decimal;
  tierTimesEffect: Decimal;
  amplifluxGain: Decimal;
  amplifluxEffect: Decimal;
  amplifluxUpgradeCost: Decimal;
  amplifluxUpgradeEffect: Decimal;
  amplifluxUpgradeBulk: Decimal;
  lastVermyrosTime: number | null;
  vermytesGain: Decimal;
  vermytesBestEffect: Decimal;
  vermytesUpgradeCost: Decimal;
  vermytesUpgradeEffect: Decimal;
  vermytesUpgradeBulk: Decimal;
  vermoraGain: Decimal;
  vermoraEffect: Decimal;
  vermytesPerSecond: Decimal;
  amplivaultRequirement: Decimal;
  amplivaultEffect: Decimal;
  softcapperLevel: Decimal;
  energyReactorGain: Decimal;
  energyGain: Decimal;
  energyEffect: Decimal;
  coreGain: Decimal;
  coreEffect: Decimal;
  coreUpgradeCost: Decimal;
  coreUpgradeEffect: Decimal;
  coreUpgradeBulk: Decimal;
  darkEnergyGain: Decimal;
  darkEnergyEffect: Decimal;
  lastNullithTime: number | null;
  nullithResetGain: Decimal;
  nullithResetsEffect: Decimal;
  nullithResetsVermyteEffect: Decimal;
  nullithResetsEnergyEffect: Decimal;
  coresPerSecond: Decimal;
  isCoreUpgradeMaxed: boolean;
  nullionGain: Decimal;
  nullionEffect: Decimal;
  nullionInputConverted: Decimal;
  dertointGain: Decimal;
  dertointEffect: Decimal;
  dertointUpgradeCost: Decimal;
  dertointUpgradeBulk: Decimal;
  dertointUpgradeEffect: Decimal;
  firstDertointUpgradeEffect: Decimal;
  lastMallirtTime: number | null;
  mallirtEffect: Decimal;
}

export interface Settings {
  localStorageName: string;
  saveInterval: number;
  upgradeStartingCost: Decimal;
  upgradeScaling: Decimal;
  upgradeEffectScaling: Decimal;
  firstResetLayerGoal: Decimal;
  bestRunTimeLimit: number;
  resetFirstUpgradeCost: Decimal;
  resetSecondUpgradeCost: Decimal;
  firstTierAt: Decimal;
  tierScaling: Decimal;
  firstTierUpgradeCost: Decimal;
  secondTierUpgradeCost: Decimal;
  thirdTierUpgradeCost: Decimal;
  fourthTierUpgradeCost: Decimal;
  amplifluxUpgradeStartingCost: Decimal;
  amplifluxUpgradeCostScaling: Decimal;
  amplifluxUpgradeEffectScaling: Decimal;
  fifthTierUpgradeCost: Decimal;
  sixthTierUpgradeCost: Decimal;
  vermyrosGoal: Decimal;
  vermytesUpgradeStartingCost: Decimal;
  vermytesUpgradeCostScaling: Decimal;
  vermytesUpgradeEffectScaling: Decimal;
  firstVermyrosUpgradeCost: Decimal;
  secondVermyrosUpgradeCost: Decimal;
  thirdVermyrosUpgradeCost: Decimal;
  fourthVermyrosUpgradeCost: Decimal;
  fifthVermyrosUpgradeCost: Decimal;
  sixthVermyrosUpgradeCost: Decimal;
  seventhVermyrosUpgradeCost: Decimal;
  eighthVermyrosUpgradeCost: Decimal;
  amplivaultRequirementStartsAt: Decimal;
  softcappers: [Decimal, Decimal][];
  coresAt: Decimal;
  coreUpgradeStartingCost: Decimal;
  coreUpgradeCostScaling: Decimal;
  coreUpgradeEffectScaling: Decimal;
  ninthVermyrosUpgradeCost: Decimal;
  tenthVermyrosUpgradeCost: Decimal;
  nullithGoal: Decimal;
  firstNullithUpgradeCost: Decimal;
  secondNullithUpgradeCost: Decimal;
  thirdNullithUpgradeCost: Decimal;
  fourthNullithUpgradeCost: Decimal;
  maxCoreUpgradeLevel: Decimal;
  stableProgressBarsStartWorkingAt: number;
  fifthNullithUpgradeCost: Decimal;
  sixthNullithUpgradeCost: Decimal;
  dertointUpgradeStartingCost: Decimal;
  dertointUpgradeCostScaling: Decimal;
  dertointUpgradeEffectScaling: Decimal;
  firstDertointUpgradeCost: Decimal;
  secondDertointUpgradeCost: Decimal;
  thirdDertointUpgradeCost: Decimal;
  fourthDertointUpgradeCost: Decimal;
  firstMallirtUpgradeCost: Decimal;
  secondMallirtUpgradeCost: Decimal;
  thirdMallirtUpgradeCost: Decimal;
  fourthMallirtUpgradeCost: Decimal;
  mallirtGoal: Decimal;
  endgameAt: Decimal;
}

export interface MergedPlayer {
  player: Player;
  cachedPlayer: CachedPlayer;
}

export interface PartialMergedPlayer {
  player?: Partial<Player>;
  cachedPlayer?: Partial<CachedPlayer>;
}

export type BooleanKeys<T> = {
  [K in keyof T]: T[K] extends boolean ? K : never;
}[keyof T];

export type DecimalKeys<T> = {
  [K in keyof T]: T[K] extends Decimal ? K : never;
}[keyof T];
